=====================================================
Vim
=====================================================
vim . = open tree with files vim
=====================================================
1. Переместить курсор на следующее слово w.
1.1. Перемещение курсора на два слова 2w.
1.2. Перемещение курсора в конец слова e.
1.3. Перемещение курсора на начало слова b.
1.4. Перемещение курсора на начало 2 слова назад 2b.
??2. Курсор на следующий параграф }, на предыдущий. Также можно добавлять цифры впереди.
-3. Нужно переместить на третий символ h, 3fh.
4. Нужно переместить курсор на 35 строк вниз, 35j.
??5. Возврат обратно ctrl+o. Или ctrl+i к следующему.
6. Если хотим переместиться на 5 символов вперед 5l.
7. Переход в начало строки home or ^, разобраться.
8. Переход в конец строки end or $, разобраться.
9. Переход на один экран вверх pgup or ctrl+b, разобраться.
10. Переход на один экран в них pgdn or ctrl+f, разобраться.
11. Переместиться на конкретную строку: номер строки + gg или :143.
??11.1. Переместиться на следующее предложение ).
??11.2. Переместиться на предыдущее предложение (.
12. Переместиться в конец файла G.
13. Переместиться в начало документа gg.
14. Перемещение по экрану: H - первая строка на экране; M - средняя строка на экране; L - нижняя строка на экране.
15 . Создание закладок: нужно нажать m и добавить любую букву из алфавита,  к примеру a. Получиться ma. И можно будет всегда переместиться к этой закладке 'a. (Да тильда).
16. Удалить символ под курсором x.
17. Удалить слово. b потом dw.
18. Просмотреть файл в двух экземплярах :sp. Команда :vsp для вертикального расположения. Для перемещения Ctrl+w hjkl.
19. Переход в режим вставки, в начало строки I(большая i).
20. Переход в режим вставки, в конец коретки a.
21. Переход в режим вставки, в конец строки A.
22. Переход в режим вставки, на новою строку вниз o. На новую строку вверх O.
23. Удаляет символ находящийся под кореткой и перходит в режим вставки s.
24. Удаляет целое предложение, переводит в начало строки и переходит в режим вставки S.
25. Заменяет символ в нормальном режиме r. Заменяет последовательно символы R.
26. Перевод в верхний или нижний регистр. Вначале выделить с помощью v, потом shift+~.
27. v визуальный режим, ap выбор целого параграфа, aw выбор целого слова, ab все что находится в скобках включая скобки.
28.1. Сделать сокрашения :ab dg digital_bpm.
28.2.  :iab позволяют биндить сокрашения вроде как :ab но только для режима вставки.
29. To save ctrl+s нужно добавить в  .vimrc
nmap <c-s> :w<CR>
imap <c-s> <ESC>:w<CR>a
? 30. dl(L) удалит один символ, dw удалит слово начиная с курсора, dd удалит строку.
? 31. yy копирование строки. yap копирование абзаца.
? 32. Вставить p вставка после курсора, P вставка перед курсором.
? 33. Удаление двух символов xp, как заменить два слова dwwP.
? 34. Отмена действия u(undo).
? 35. Возврат действия ctrl+r.
? 36. Отмена действий за 4 минуты :earlier 4m
? 37. Отмена последних 5 действий :undo 5.
? 38. Просмотр дерева undo :undolist.
? 39. Поиск /any_word + enter, потом перемещение по слову any_word n вниз и N вверх.
? 40. Команда позволяющая включить поиск с первых букв set incsearch.
? 41. Команда позволяющая включить игнорирование регистра set ignorecase.
? 42. Команда позволяющая включить умный поиск с игнорированием регистра set smartcase.
? 43. Поиск конкретного слова нужно ставить скобки перед словом \< и после >\, пример /\<any_word>\. То-есть будет искать только это слово.
? 44. Регистры, создать регистр "a. Теперь будет регистр с именем a. Просмотреть все регистры :registers.
? 45. Folding. Команда :set foldmethod=indent позволяет сворачивать текст фрагментами, с помощью zo, zc, za в нормальном режиме. Также можно добавить в vimrc код nnoremap <space> za. Интересно проверить сворачивается это в режиме вставки.
46. Ctrl + e or Ctrl + y. Двигание экрана без смещени курсора.
? 47. Вкладки. Открытие вкладок :tabnew - создаст новую вкладку, :tabnew file_name - откроет файл вкладкой или если нету создаст наверное. Можно открыть сразу несколько файлов в вкладках vim -p file1 file2. Перемещение gt,  gT, 5gt. Команда :tabdo %s/шило/мыло/g.
Vim вторая часть:
0. Когда находишься на выделенном предложении, переместить экран что бы это предложение стало по центру.
0. Аббревиатура для всех файлов в vim.
0. Копировать в общий буфер обмена.
0. Буферы разобраться страницы 34-35.
1. Повторное применение действий нажать точку ".".
2. Макросы в вим потестить.
3. :help function-list глянуть, можно писать свои функции.
4. Найти примеры vimrc файлов присмотреть функционал который следует добавить.
5. Перемещение между скобками %.
6. В вим команды можно использовать команды системы. К примеру: :!ls или :!dir.
7. Omnicompletion проверить.
8. Плагин snippetsEmu проверить.
9. Семь привычек эффективного редактирования текст 2.0 прослушать доклад.
10. vim register up U
